<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<context:component-scan base-package="nl.dias" />
    <context:component-scan base-package="nl.lakedigital"/>

	<!--<bean id="gebruikerRepository" class="nl.dias.repository.GebruikerRepository" depends-on="sessionFactory">-->
	<!--<property name="sessionFactory" ref="sessionFactory"/>-->
	<!--</bean>-->
	<!---->
	<!--<bean id="headerFilter" class="nl.dias.web.filter.HeaderFilter" depends-on="gebruikerRepository">-->
	<!--<property name="gebruikerRepository" ref="gebruikerRepository"/>-->
	<!--</bean>-->
	<!---->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<property name="maxUploadSize" value="50000000"/>
	</bean>

	<!-- Activemq connection factory -->
	<bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<constructor-arg index="0" value="tcp://localhost:61616" />
	</bean>

	<!-- ConnectionFactory Definition -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<constructor-arg ref="amqConnectionFactory" />
	</bean>

	<!-- Aanmaken Taak -->
	<!-- Default Destination Queue Definition -->
	<bean id="opslaanTaakDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="taakOpslaanQueue"/>
	</bean>

	<!-- aanmakenTaakTemplate Definition -->
	<bean id="opslaanTaakTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="defaultDestination" ref="opslaanTaakDestination"/>
	</bean>

	<!-- Message Sender Definition -->
	<bean id="opslaanTaakSender" class="nl.dias.messaging.sender.OpslaanTaakSender">
		<constructor-arg index="0" ref="opslaanTaakTemplate"/>
	</bean>
	<!-- /Aanmaken Taak -->

	<bean id="properties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:app.properties</value>
			</list>
		</property>
		<property name="placeholderPrefix" value="${"/>
	</bean>

	<!--<bean id="inkomendRequestRepository" class="nl.lakedigital.djfc.repository.InkomendRequestRepository" depends-on="sessionFactory">-->
	<!--<property name="sessionFactory" ref="sessionFactory" />-->
	<!--</bean>-->
	<!---->
	<!--<bean id="inkomendRequestService" class="nl.lakedigital.djfc.service.InkomendRequestService" depends-on="inkomendRequestRepository">-->
	<!--<property name="inkomendRequestRepository" ref="inkomendRequestRepository" />-->
	<!--</bean>-->

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<!--<property name="uniqueResourceName" value="NonXA_DataSource" />-->
		<!--<property name="minPoolSize" value="2" />-->
		<!--<property name="maxPoolSize" value="30" />-->
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="${djfc.db.name}"/>
		<property name="username" value="${djfc.db.user}"/>
		<property name="password" value="${djfc.db.pass}"/>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan">
			<list>
				<value>nl.dias</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
		<property name="dataSource" ref="dataSource"/>
		<property name="changeLog" value="classpath:databaseChangeLog.xml"/>
	</bean>

	<bean id="adresClient" class="nl.lakedigital.djfc.client.oga.AdresClient">
		<property name="basisUrl" value="${oga.url}"/>
	</bean>
	<bean id="bijlageClient" class="nl.lakedigital.djfc.client.oga.BijlageClient">
		<property name="basisUrl" value="${oga.url}"/>
	</bean>
	<bean id="communicatieClient" class="nl.lakedigital.djfc.client.communicatie.CommunicatieClient">
		<property name="basisUrl" value="${oga.url}"/>
	</bean>
	<bean id="groepBijlagesClient" class="nl.lakedigital.djfc.client.oga.GroepBijlagesClient">
		<property name="basisUrl" value="${oga.url}"/>
	</bean>
	<bean id="opmerkingClient" class="nl.lakedigital.djfc.client.oga.OpmerkingClient">
		<property name="basisUrl" value="${oga.url}"/>
	</bean>
	<!--<bean id="polisClient" class="nl.lakedigital.djfc.client.PolisClient">-->
	<!--<property name="basisUrl" value="${oga.url}"/>-->
	<!--</bean>-->
	<bean id="rekeningClient" class="nl.lakedigital.djfc.client.oga.RekeningClient">
		<property name="basisUrl" value="${oga.url}"/>
	</bean>
	<bean id="telefoonnummerClient" class="nl.lakedigital.djfc.client.oga.TelefoonnummerClient">
		<property name="basisUrl" value="${oga.url}"/>
	</bean>
	<bean id="telefonieBestandClient" class="nl.lakedigital.djfc.client.oga.TelefonieBestandClient">
		<property name="basisUrl" value="${oga.url}"/>
	</bean>

</beans>